enclave {

	trusted {
		include "sgx_tgmp.h"

		public void tgmp_init();

		public void e_mpz_add(
			[user_check] mpz_t *c, [user_check] mpz_t *a, [user_check] mpz_t *b
		);

		public void e_mpz_mul(
			[user_check] mpz_t *c, [user_check] mpz_t *a, [user_check] mpz_t *b
		);

		public void e_mpz_div(
			[user_check] mpz_t *c, [user_check] mpz_t *a, [user_check] mpz_t *b
		);

		public void e_mpf_div(
			[user_check] mpf_t *c, [user_check] mpf_t *a, [user_check] mpf_t *b
		);

		public void encrypt_key (
		    [user_check] int *err_status,
		    [in, count = 128] unsigned char* key,
		    [out, count = 1024] unsigned char* encrypted_key, [user_check] uint32_t *enc_len);

        public void decrypt_key (
		    [user_check] int *err_status,
		    [in, count = 1024] unsigned char* encrypted_key,
		    uint32_t enc_len,
		    [out, count = 128] unsigned char* key );

		public void sign_message (
            		    [user_check] int *err_status,
            		    [in, count = 1024] unsigned char* encrypted_key,
            		    uint32_t enc_len,
            		    [in, count = 1024] unsigned char* message,
            		    [out, count = 1024] unsigned char* signature);





	};


	untrusted {
		include "gmp.h"

		uint64_t oc_realloc([user_check] void *optr, size_t osz, size_t nsz);

		void oc_free([user_check] void *optr, size_t sz);
	};
};

