diff --git a/linux/installer/common/psw/Makefile b/linux/installer/common/psw/Makefile
index e46cf53..5b74add 100644
--- a/linux/installer/common/psw/Makefile
+++ b/linux/installer/common/psw/Makefile
@@ -50,11 +50,11 @@ install:
 	install -d $(USR_LIB_PATH)
 	cp -r $(SOURCE_FOLDER)/* $(SOURCE_INSTALL_PATH)
 	install $(SCRIPTS_FOLDER)/* $(SCRIPTS_INSTALL_PATH)
-	mv $(PSW_LIB_PATH)/libsgx_uae_service.so $(USR_LIB_PATH)
-	mv $(PSW_LIB_PATH)/libsgx_urts.so $(USR_LIB_PATH)
-	mv $(PSW_LIB_PATH)/libsgx_enclave_common.so $(USR_LIB_PATH)
+	sudo mv $(PSW_LIB_PATH)/libsgx_uae_service.so $(USR_LIB_PATH)
+	sudo mv $(PSW_LIB_PATH)/libsgx_urts.so $(USR_LIB_PATH)
+	sudo mv $(PSW_LIB_PATH)/libsgx_enclave_common.so $(USR_LIB_PATH)
 	rmdir $(PSW_LIB_PATH)
 	cd $(USR_LIB_PATH) && \
-	mv libsgx_enclave_common.so libsgx_enclave_common.so.$(ECL_VER) && \
-	ln -fs libsgx_enclave_common.so.$(ECL_VER) libsgx_enclave_common.so.$(shell echo $(ECL_VER) |awk -F. '{print $$1}') && \
-	ln -fs libsgx_enclave_common.so.$(shell echo $(ECL_VER) |awk -F. '{print $$1}') libsgx_enclave_common.so
\ No newline at end of file
+	sudo mv libsgx_enclave_common.so libsgx_enclave_common.so.$(ECL_VER) && \
+	sudo ln -fs libsgx_enclave_common.so.$(ECL_VER) libsgx_enclave_common.so.$(shell echo $(ECL_VER) |awk -F. '{print $$1}') && \
+	sudo ln -fs libsgx_enclave_common.so.$(shell echo $(ECL_VER) |awk -F. '{print $$1}') libsgx_enclave_common.so
\ No newline at end of file
diff --git a/linux/installer/common/psw/install.sh b/linux/installer/common/psw/install.sh
index 59f3ed6..a3fc980 100755
--- a/linux/installer/common/psw/install.sh
+++ b/linux/installer/common/psw/install.sh
@@ -42,26 +42,26 @@ AESM_PATH=$PSW_DST_PATH/aesm
 # Install the AESM service
 
 id -u aesmd &> /dev/null || \
-    /usr/sbin/useradd -r -U -c "User for aesmd" \
+    sudo /usr/sbin/useradd -r -U -c "User for aesmd" \
     -d /var/opt/aesmd -s /sbin/nologin aesmd
 
-mkdir -p /var/opt/aesmd
-cp -rf $AESM_PATH/data /var/opt/aesmd/
-rm -rf $AESM_PATH/data
-cp -rf $AESM_PATH/conf/aesmd.conf /etc/aesmd.conf
-rm -rf $AESM_PATH/conf
-chmod  0644 /etc/aesmd.conf
-chown -R aesmd:aesmd /var/opt/aesmd
-chmod 0750 /var/opt/aesmd
+sudo mkdir -p /var/opt/aesmd
+sudo cp -rf $AESM_PATH/data /var/opt/aesmd/
+sudo rm -rf $AESM_PATH/data
+sudo cp -rf $AESM_PATH/conf/aesmd.conf /etc/aesmd.conf
+sudo rm -rf $AESM_PATH/conf
+sudo chmod  0644 /etc/aesmd.conf
+sudo chown -R aesmd:aesmd /var/opt/aesmd
+sudo chmod 0750 /var/opt/aesmd
 
 # By default the AESM's communication socket will be created in
 # /var/run/aesmd.  Putting the socket in the aesmd sub-directory
 # as opposed to directly in /var/run allows the user to create a
 # mount a volume at /var/run/aesmd and thus expose the socket to
 # a different filesystem or namespace, e.g. a Docker container.
-mkdir -p /var/run/aesmd
-chown -R aesmd:aesmd /var/run/aesmd
-chmod 0755 /var/run/aesmd
+sudo mkdir -p /var/run/aesmd
+sudo chown -R aesmd:aesmd /var/run/aesmd
+sudo chmod 0755 /var/run/aesmd
 
 if [ -d /run/systemd/system ]; then
     systemctl stop aesmd &> /dev/null || echo
@@ -73,12 +73,12 @@ if [ -d /run/systemd/system ]; then
         AESMD_DEST=/usr/lib/systemd/system/$AESMD_NAME
     fi
     echo -n "Installing $AESMD_NAME service ..."
-    sed -e "s:@aesm_folder@:$AESM_PATH:" \
+    sudo sed -e "s:@aesm_folder@:$AESM_PATH:" \
         $AESMD_TEMP > $AESMD_DEST
-    chmod 0644 $AESMD_DEST
-    rm -f $AESMD_TEMP
-    rm -f $AESM_PATH/aesmd.conf
-    systemctl enable aesmd
+    sudo chmod 0644 $AESMD_DEST
+    sudo rm -f $AESMD_TEMP
+    sudo rm -f $AESM_PATH/aesmd.conf
+    sudo systemctl enable aesmd
     retval=$?
 elif [ -d /etc/init/ ]; then
     /sbin/initctl stop aesmd &> /dev/null || echo
