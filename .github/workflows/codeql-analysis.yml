name: "CodeQL"

on:
  push:
    branches: [develop, beta, master, stable]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [develop]
  schedule:
    - cron: '0 23 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    - name: Submodule update
      run: git submodule update --init --recursive

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      # Override language selection by uncommenting this and choosing your languages
      # with:
      #   languages: go, javascript, csharp, python, cpp, java

    - name: Copy patches
      run: |
        cp docker/install-psw.patch ./ && \
        cp scripts/common-psw.patch ./

    - name: apt-get update
      run: sudo apt-get update

    - name: apt-utils
      run: sudo apt-get install -yq apt-utils

    - name: Install prereqs
      run: |
        sudo apt-get install -yq --no-install-recommends \
          alien \
            autoconf \
            automake \
            bison \
            build-essential \
            ca-certificates \
            ccache \
            cmake \
            curl \
            debhelper \
            flex \
            git \
            libboost-all-dev \
            libcurl4-openssl-dev \
            libjsonrpccpp-dev \
            libjsonrpccpp-tools \
            libprocps-dev \
            libprotobuf10 \
            libprotobuf-dev \
            libssl-dev \
            libtool \
            libxml2-dev \
            ocaml \
            ocamlbuild \
            protobuf-compiler \
            python \
            python-yaml \
            sudo \
            telnet  \
            texinfo \
            uuid-dev \
            vim \
            wget \
            yasm

    - name: Install linux-sgx
      run: | 
          git clone -b sgx_2.6 --depth 1 https://github.com/intel/linux-sgx && \
            cd linux-sgx && \
            patch -p1 -i ../install-psw.patch && \
            patch -p1 -i ../common-psw.patch && \
            ./download_prebuilt.sh 2> /dev/null && \
            make -s -j$(nproc) sdk_install_pkg psw_install_pkg && \
            ./linux/installer/bin/sgx_linux_x64_sdk_2.6.100.51363.bin --prefix=/opt/intel && \
            ./linux/installer/bin/sgx_linux_x64_psw_2.6.100.51363.bin && \
            cd .. && rm -rf linux-sgx/
    
    - name: Build dependencies
      run: cd scripts && ./build_deps.py && cd ..
    
    - name: Install DAL
      run: |
        wget --progress=dot:mega -O - https://github.com/intel/dynamic-application-loader-host-interface/archive/072d233296c15d0dcd1fb4570694d0244729f87b.tar.gz | tar -xz && \
        cd dynamic-application-loader-host-interface-072d233296c15d0dcd1fb4570694d0244729f87b && \
        cmake . -DCMAKE_BUILD_TYPE=Release -DINIT_SYSTEM=SysVinit && \
        make install && \
        cd .. && rm -rf dynamic-application-loader-host-interface-072d233296c15d0dcd1fb4570694d0244729f87b

    - run: |
        ./autoconf.bash && \
        ./configure && \
        bash -c "make -j$(nproc)"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
